link:
http://www.michael-noll.com/blog/2011/04/09/benchmarking-and-stress-testing-an-hadoop-cluster-with-terasort-testdfsio-nnbench-mrbench/

All tests & examples
hadoop jar hadoop-*test*.jar
hadoop jar hadoop-*examples*.jar

-DFS IO benchmark-
10 input files of size 1GB
hadoop jar hadoop-*test*.jar TestDFSIO -write -nrFiles 10 -fileSize 1000
hadoop jar hadoop-*test*.jar TestDFSIO -read -nrFiles 10 -fileSize 1000
hadoop jar hadoop-*test*.jar TestDFSIO -clean

-TeraSort benchmark-
hadoop jar hadoop-*examples*.jar teragen <number of 100-byte rows> <output dir>
hadoop jar hadoop-*examples*.jar terasort <input dir> <output dir>
hadoop jar hadoop-*examples*.jar teravalidate <terasort output dir (= input data)> <teravalidate output dir>

hadoop jar hadoop-*examples*.jar teragen 100000000 /user/raijin/terasort-input
hadoop jar hadoop-*examples*.jar terasort /user/raijin/terasort-input /user/raijin/terasort-output
hadoop jar hadoop-*examples*.jar teravalidate /user/raijin/terasort-output /user/raijin/terasort-validate

-Random data & normal sort-
hadoop jar hadoop-*examples*.jar randomwriter random-data
hadoop jar hadoop-*examples*.jar sort random-data sorted-data

-Map-Reduce benchmark-
hadoop jar hadoop-*test*.jar mrbench -numRuns 50
hadoop jar hadoop-*test*.jar nnbench -operation create_write \
    -maps 12 -reduces 6 -blockSize 1 -bytesToWrite 0 -numberOfFiles 1000 \
    -replicationFactorPerFile 3 -readFileAfterOpen true \
    -baseDir /benchmarks/NNBench-`hostname -s`

-Set # of map/reduce-
Add -D mapred.map.tasks = 20 \ -D mapred.reduce.tasks = 20
